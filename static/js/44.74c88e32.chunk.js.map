{"version":3,"file":"static/js/44.74c88e32.chunk.js","mappings":"qLAEaA,E,QAAMC,GAAAA,IAAH,mI,mHCCHC,GAAcD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mIAQXG,EAAQH,EAAAA,GAAAA,MAAH,uJ,sECTLI,E,QAAQJ,GAAAA,MAAH,iE,sECALK,E,QAAcL,GAAAA,OAAH,8U,iKCQlBM,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAEHG,WACAC,QANa,yHAMM,iCACtBC,MAAOL,EAAAA,KAAaG,WAAWE,QAC/BC,SAAUN,EAAAA,KAEPG,WACAI,IAAI,EAAG,wDAGCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,+BACE,SAAC,KAAD,CACEC,cAAe,CAAET,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDM,iBAAkBb,EAClBc,SAVc,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACrBb,EAA0BY,EAA1BZ,KAAMG,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SACrBG,EAASO,EAAAA,EAAAA,SAAwB,CAAEd,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,KAChDS,GACD,EAGG,UAKE,UAAC,KAAD,CAAME,aAAa,MAAnB,WACE,UAAC,IAAD,CAAOC,QAAQ,OAAf,kBAEE,SAAC,IAAD,CAAaC,KAAK,OAAOjB,KAAK,UAC9B,SAAC,KAAD,CAAcA,KAAK,aAErB,UAAC,IAAD,CAAOgB,QAAQ,QAAf,mBAEE,SAAC,IAAD,CAAaC,KAAK,QAAQjB,KAAK,WAC/B,SAAC,KAAD,CAAcA,KAAK,cAErB,UAAC,IAAD,CAAOgB,QAAQ,WAAf,sBAEE,SAAC,IAAD,CAAaC,KAAK,WAAWjB,KAAK,cAClC,SAAC,KAAD,CAAcA,KAAK,iBAErB,SAAC,IAAD,CAAaiB,KAAK,SAAlB,4BAKT,EC9CD,EARqB,WACnB,OACE,SAAC,IAAD,WACE,SAACX,EAAD,KAGL,C","sources":["components/common/Box/Box.styled.js","components/common/Input/Input.styled.js","components/common/Label/Label.styled.js","components/common/buttons/FirstButton.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  width: 700px;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormikInput = styled(Field)`\n  display: block;\n  border-color: gray;\n  border-radius: 5px;\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 15px;\n  border-color: gray;\n  border-radius: 5px;\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import styled from 'styled-components';\n\nexport const FirstButton = styled.button`\n  display: inline-block;\n  margin-top: 15px;\n  width: 150px;\n  padding: 3px;\n  border-color: gray;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: bold;\n  cursor: pointer;\n  :hover {\n    background-color: blue;\n    border-color: blue;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  }\n`;\n","import { FirstButton } from 'components/common/buttons/FirstButton.styled';\nimport { FormikInput } from 'components/common/Input/Input.styled';\nimport { Label } from 'components/common/Label/Label.styled';\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport * as yup from 'yup';\n\nconst nameValid = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required()\n    .matches(nameValid, 'Name may contain only letters'),\n  email: yup.string().required().email(),\n  password: yup\n    .string()\n    .required()\n    .min(7, 'Password is too short - should be 8 chars minimum.'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const hadleSubmit = (values, { resetForm }) => {\n    const { name, email, password } = values;\n    dispatch(authOperations.register({ name, email, password }));\n    resetForm();\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={schema}\n        onSubmit={hadleSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <Label htmlFor=\"name\">\n            Name\n            <FormikInput type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" />\n          </Label>\n          <Label htmlFor=\"email\">\n            Email\n            <FormikInput type=\"email\" name=\"email\" />\n            <ErrorMessage name=\"email\" />\n          </Label>\n          <Label htmlFor=\"password\">\n            Password\n            <FormikInput type=\"password\" name=\"password\" />\n            <ErrorMessage name=\"password\" />\n          </Label>\n          <FirstButton type=\"submit\">Register</FirstButton>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { Box } from 'components/common/Box/Box.styled';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <Box>\n      <RegisterForm />\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Box","styled","FormikInput","Field","Input","Label","FirstButton","schema","yup","shape","name","required","matches","email","password","min","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","authOperations","autoComplete","htmlFor","type"],"sourceRoot":""}