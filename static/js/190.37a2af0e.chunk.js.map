{"version":3,"file":"static/js/190.37a2af0e.chunk.js","mappings":"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","sources":["components/common/Box/Box.styled.js","components/common/Input/Input.styled.js","components/common/Label/Label.styled.js","components/common/buttons/FirstButton.styled.js","components/Filter/Filter.jsx","components/PhoneBookForm/PhoneBookForm.styled.js","components/PhoneBookForm/PhoneBookForm.jsx","components/PhoneBookList/BookList.styled.js","components/PhoneBookList/BookListItem.styled.js","components/PhoneBookList/PhoneBookList.jsx","pages/PhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  width: 700px;\n  margin: 20px auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormikInput = styled(Field)`\n  display: block;\n  margin-top: 15px;\n  border-color: gray;\n  border-radius: 5px;\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 15px;\n  border-color: gray;\n  border-radius: 5px;\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  font-size: 24px;\n  font-weight: bold;\n`;\n","import styled from 'styled-components';\n\nexport const FirstButton = styled.button`\n  display: inline-block;\n  margin-top: 15px;\n  width: 150px;\n  padding: 3px;\n  border-color: gray;\n  border-radius: 5px;\n  font-size: 18px;\n  font-weight: bold;\n  cursor: pointer;\n  :hover {\n    background-color: blue;\n    border-color: blue;\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  }\n`;\n","import { Label } from 'components/common/Label/Label.styled';\nimport { Input } from 'components/common/Input/Input.styled';\nimport { useSelector, useDispatch } from 'react-redux/es/exports';\nimport { addFilter } from 'redux/contacts/contacts-slice';\nimport { contactsSelectors } from 'redux/contacts';\n\nexport const Filter = () => {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    const filter = e.currentTarget.value;\n    dispatch(addFilter(filter));\n  };\n  return (\n    <Label htmlFor=\"filter\">\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={changeFilter}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nimport { Form } from 'formik';\n\nexport const PhoneForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  border: 1px, solid, black;\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport { PhoneForm } from './PhoneBookForm.styled';\nimport { Label } from 'components/common/Label/Label.styled';\nimport { FirstButton } from 'components/common/buttons/FirstButton.styled';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux/es/exports';\nimport { contactsOperations } from 'redux/contacts';\nimport { FormikInput } from 'components/common/Input/Input.styled';\n\nconst nameValid = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .matches(\n      nameValid,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .min(3)\n    .required(),\n});\n\nexport const PhoneBookForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    dispatch(contactsOperations.addContacts({ name, number }));\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <PhoneForm autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <FormikInput type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" />\n        </Label>\n        <Label htmlFor=\"name\">\n          Phone\n          <FormikInput type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" />\n        </Label>\n        <FirstButton type=\"submit\">Add Contact</FirstButton>\n      </PhoneForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const BookList = styled.table`\n  margin-top: 50px;\n`;\n","import styled from 'styled-components';\n\nexport const BookListItem = styled.td`\n  font-size: 18px;\n  font-weight: bold;\n  padding: 5px 20px;\n`;\n","import { SecondButton } from 'components/common/buttons/SecondButton.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { BookList } from './BookList.styled';\nimport { BookListItem } from './BookListItem.styled';\n\nexport const PhoneBookList = () => {\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filter = useSelector(contactsSelectors.getFilter);\n  const dispatch = useDispatch();\n  const getVisibleContacts = () => {\n    const normalizeFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizeFilter)\n    );\n  };\n  const deleteContact = id => {\n    dispatch(contactsOperations.deleteContacts(id));\n  };\n  return (\n    <BookList>\n      <tbody>\n        {getVisibleContacts().map(({ name, id, number }) => (\n          <tr>\n            <BookListItem>{name}</BookListItem>\n            <BookListItem>{number}</BookListItem>\n            <BookListItem>\n              <SecondButton\n                type=\"button\"\n                name={name}\n                onClick={() => deleteContact(id)}\n              >\n                delete\n              </SecondButton>\n            </BookListItem>\n          </tr>\n        ))}\n      </tbody>\n    </BookList>\n  );\n};\n","import { Box } from 'components/common/Box/Box.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { PhoneBookForm } from 'components/PhoneBookForm/PhoneBookForm';\nimport { PhoneBookList } from 'components/PhoneBookList/PhoneBookList';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nconst PhoneBook = () => {\n  const dispatch = useDispatch(contactsOperations.getContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <Box>\n        <PhoneBookForm />\n      </Box>\n      <Box>\n        <Filter />\n        {contacts.length === 0 ? (\n          <h2> У вас нет сохраненных контактов </h2>\n        ) : (\n          <PhoneBookList />\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["Box","styled","FormikInput","Field","Input","Label","FirstButton","Filter","filter","useSelector","contactsSelectors","dispatch","useDispatch","htmlFor","I","type","name","pattern","title","required","value","onChange","e","currentTarget","addFilter","PhoneForm","Form","schema","yup","shape","matches","min","PhoneBookForm","initialValues","number","validationSchema","onSubmit","values","resetForm","contactsOperations","autoComplete","BookList","BookListItem","PhoneBookList","contacts","normalizeFilter","toLocaleLowerCase","contact","includes","getVisibleContacts","map","id","onClick","deleteContact","useEffect","length"],"sourceRoot":""}